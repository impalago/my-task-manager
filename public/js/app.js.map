{"version":3,"sources":["app.js","common.js","routes.js","controllers/boardItemCtrl.js","controllers/boardsCtrl.js","controllers/cardListCtrl.js","factory/boardItemFactory.js","factory/boardsFactory.js","factory/cardListFactory.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["angular.module('app', ['ngRoute', 'ui.bootstrap', 'colorpicker.module']);","/**\n *  Initialize the material design\n */\n$.material.init();","angular.module('app').config(function($routeProvider) {\n\n    $routeProvider\n\n        .when('/boards', {\n            templateUrl: '/api/boards-main',\n            controller: 'boardsCtrl'\n        })\n\n        .when('/boards/:id', {\n            templateUrl: '/api/boards-item',\n            controller: 'boardItemCtrl'\n        });\n\n});\n","angular.module('app').controller('boardItemCtrl', function($scope, $uibModal, $routeParams, boardItemFactory) {\n    $scope.init = function() {\n\n    };\n\n     boardItemFactory.getBoardInfo($routeParams.id)\n        .then(function(rec) {\n            $scope.pageName = rec.name;\n        });\n\n    $scope.init();\n});\n","angular.module('app').controller('boardsCtrl', function($scope, boardsFactory, $uibModal) {\n\n    $scope.init = function() {\n        $scope.allBoards();\n        $scope.board = {\n            name: ''\n        };\n    };\n\n    $scope.allBoards = function() {\n        boardsFactory.getBoards()\n            .then(function(rec) {\n                $scope.boards = boardsFactory.boardList;\n            });\n    };\n\n    $scope.createBoard = function() {\n        var modalInstance = $uibModal.open({\n            templateUrl: '/api/boards-create-form',\n            controller: function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Create board';\n                $scope.boardSubmit = function() {\n                    if($scope.boardForm.$valid) {\n                        boardsFactory.createBoard($scope.board)\n                            .then(function() {\n                                $uibModalInstance.close();\n                            });\n                    }\n                };\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }\n        });\n\n        modalInstance.result.then(function() {\n            $scope.allBoards();\n        });\n    };\n\n    $scope.editBoard = function(id) {\n        var modalInstance = $uibModal.open({\n            templateUrl: '/api/boards-create-form',\n            controller: function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Edit board';\n                boardsFactory.editBoard(id)\n                    .then(function(rec) {\n\n                        $scope.boardName = rec.name;\n                        $scope.boardSubmit = function() {\n                            if($scope.boardForm.$valid) {\n                                boardsFactory.updateBoard(id, $scope.board)\n                                    .then(function() {\n                                        $uibModalInstance.close();\n                                    });\n                            }\n                        };\n\n                    });\n\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }\n        });\n\n        modalInstance.result.then(function() {\n            $scope.allBoards();\n        });\n    };\n\n    $scope.deleteBoard = function(id) {\n        $.confirm({\n            title: 'Are you sure?',\n            content: 'The board to move to a basket!',\n            confirm: function(){\n                boardsFactory.deleteBoard(id)\n                    .then(function(rec) {\n                        $scope.allBoards();\n                    });\n            }\n        });\n    };\n\n    $scope.init();\n});","angular.module('app').controller('cardListCtrl', function($scope, $uibModal, $routeParams, cardListFactory) {\n\n    var $self = this;\n    $scope.init = function() {\n        $scope.cardList();\n    };\n\n    $scope.cardList = function() {\n        cardListFactory.getAllCardList()\n            .then(function(rec) {\n                $self.allCardList = rec;\n            });\n    };\n\n    $self.createCardList = function() {\n        var modalInstance = $uibModal.open({\n            templateUrl: '/api/card-list-create-form',\n            controller: function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Create card list';\n                $scope.cardListSubmit = function() {\n                    if($scope.cardListForm.$valid) {\n                        $scope.cardListFields.board_id = $routeParams.id;\n                        cardListFactory.createCardList($scope.cardListFields)\n                            .then(function() {\n                                $uibModalInstance.close();\n                            });\n                    }\n                };\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }\n        });\n\n        modalInstance.result.then(function() {\n            $scope.cardList();\n        });\n    };\n\n    $self.editCardList = function(id) {\n        var modalInstance = $uibModal.open({\n            templateUrl: '/api/card-list-create-form',\n            controller: function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Edit card list';\n                cardListFactory.editCardList(id)\n                    .then(function(rec) {\n                        $scope.cardListFields = { name: '', color: '' };\n                        $scope.cardListName = rec.name;\n                        $scope.colorcardListColor = rec.color;\n                        $scope.cardListSubmit = function() {\n                            if($scope.cardListFields.name != rec.name || $scope.cardListFields.color) {\n                                $scope.cardListFields.board_id = $routeParams.id;\n                                $scope.cardListFields.name = !$scope.cardListFields.name ? rec.name : $scope.cardListFields.name;\n                                $scope.cardListFields.color = !$scope.cardListFields.color ? rec.color : $scope.cardListFields.color;\n                                cardListFactory.updateCardList(id, $scope.cardListFields)\n                                    .then(function() {\n                                        modalInstance.close();\n                                    });\n                            } else {\n                                $uibModalInstance.dismiss('cancel');\n                            }\n                        };\n\n                    });\n\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }\n        });\n\n        modalInstance.result.then(function() {\n            $scope.cardList();\n        });\n    };\n\n    $self.deleteCardList = function(id) {\n        $.confirm({\n            title: 'Are you sure?',\n            confirm: function(){\n                cardListFactory.deleteCardList(id)\n                    .then(function(rec) {\n                        $scope.cardList();\n                    });\n            }\n        });\n    };\n\n\n    $scope.init();\n});","angular.module('app').factory('boardItemFactory', function($http, $q) {\n\n    var board = this;\n\n    board.getBoardInfo = function(id) {\n        var defer = $q.defer();\n        $http.get('/api/boards/' + id)\n            .success(function(rec) {\n                defer.resolve(rec);\n            })\n            .error(function(err) {\n                deref.reject(err);\n            });\n        return defer.promise;\n    };\n\n    return board;\n});","angular.module('app').factory('boardsFactory', function($http, $q) {\n\n    var board = this;\n    this.boardList = {};\n\n    board.getBoards = function() {\n        var defer = $q.defer();\n\n        $http.get('/api/boards')\n            .success(function(rec) {\n                board.boardList = rec;\n                defer.resolve(rec);\n            }).error(function(err, status) {\n                defer.reject(err);\n            });\n\n        return defer.promise;\n    };\n\n    board.createBoard = function(board) {\n        var defer = $q.defer();\n        $http.post('/api/boards', board)\n            .success(function(rec) {\n                defer.resolve(rec);\n            })\n            .error(function(err, status) {\n                defer.reject(err);\n            });\n\n        return defer.promise;\n    };\n\n    board.editBoard = function(id) {\n        var defer = $q.defer();\n        $http.get('/api/boards/' + id + '/edit')\n            .success(function(rec) {\n                defer.resolve(rec);\n            })\n            .error(function(err, status) {\n                defer.reject(err);\n            });\n\n        return defer.promise;\n    };\n\n    board.updateBoard = function(id, board) {\n        var defer = $q.defer();\n        $http.put('/api/boards/' + id, board)\n            .success(function(rec) {\n                defer.resolve(rec);\n            })\n            .error(function(err, status) {\n                defer.reject(err);\n            });\n\n        return defer.promise;\n    };\n\n    board.deleteBoard = function(id) {\n        var defer = $q.defer();\n\n        $http.delete('/api/boards/' + id)\n            .success(function(rec) {\n                defer.resolve(rec);\n            })\n            .error(function(err, status) {\n                defer.reject(err);\n            });\n\n        return defer.promise;\n    };\n\n    return board;\n});","angular.module('app').factory('cardListFactory', function($http, $q, $routeParams) {\n    var cardList = {};\n\n    cardList.getAllCardList = function() {\n        var defer = $q.defer();\n        $http.get('/api/card-list', {\n            params: {\n                board_id: $routeParams.id\n            }\n        })\n            .success(function(rec) {\n                defer.resolve(rec);\n            })\n            .error(function(err, status) {\n                defer.reject(err);\n            });\n\n        return defer.promise;\n    };\n\n    cardList.createCardList = function(cardList) {\n        var defer = $q.defer();\n        $http.post('/api/card-list', cardList)\n            .success(function(rec) {\n                defer.resolve(rec);\n            })\n            .error(function(err, status) {\n                defer.reject(err);\n            });\n\n        return defer.promise;\n    };\n\n    cardList.editCardList = function(id) {\n        var defer = $q.defer();\n        $http.get('/api/card-list/' + id + '/edit')\n            .success(function(rec) {\n                defer.resolve(rec);\n            })\n            .error(function(err, status) {\n                defer.reject(err);\n            });\n\n        return defer.promise;\n    };\n\n    cardList.updateCardList = function(id, cardList) {\n        var defer = $q.defer();\n        $http.put('/api/card-list/' + id, cardList)\n            .success(function(rec) {\n                defer.resolve(rec);\n            })\n            .error(function(err, status) {\n                defer.reject(err);\n            });\n\n        return defer.promise;\n    };\n\n    cardList.deleteCardList = function(id) {\n        var defer = $q.defer();\n\n        $http.delete('/api/card-list/' + id)\n            .success(function(rec) {\n                defer.resolve(rec);\n            })\n            .error(function(err, status) {\n                defer.reject(err);\n            });\n\n        return defer.promise;\n    };\n\n    return cardList;\n});"],"sourceRoot":"/source/"}