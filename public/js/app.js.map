{"version":3,"sources":["annotated.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["/* @ngInject */\n\nangular\n    .module('app', [\n        'ui.router',\n        'ui.bootstrap',\n        'colorpicker.module',\n        'chieffancypants.loadingBar',\n        'ngAnimate',\n        'angular-sortable-view'\n    ])\n    .config([\"cfpLoadingBarProvider\", function(cfpLoadingBarProvider) {\n        cfpLoadingBarProvider.includeSpinner = true;\n    }]);\n'use strict';\n\n/* @ngInject */\nangular\n    .module('app')\n    .config([\"$stateProvider\", \"$urlRouterProvider\", function($stateProvider, $urlRouterProvider) {\n\n        $urlRouterProvider.otherwise('/');\n\n        $stateProvider\n\n            .state('boards', {\n                url: \"/boards\",\n                templateProvider: [\"$templateCache\", function($templateCache){\n                    return $templateCache.get('modules/boards/boards.tpl.html');\n                }],\n                controller: \"BoardsController\"\n            })\n\n            .state('board-item', {\n                url: \"/boards/:id\",\n                templateProvider: [\"$templateCache\", function($templateCache){\n                    return $templateCache.get('modules/boards/board-item/board-item.tpl.html');\n                }],\n                controller: \"BoardItemCtrl\"\n            });\n\n    }]);\n\n\n/**\n *  Initialize the material design\n */\n$.material.init();\nangular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"modules/boards/boards.tpl.html\",\"<div class=\\\"container-fluid fadein fadeout\\\" ng-hide=\\\"fakeIntro\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10 col-md-offset-1\\\">\\n\\n            <div class=\\\"page-header\\\">\\n                <h1>Boards</h1>\\n            </div>\\n\\n            <div id=\\\"board_list\\\" class=\\\"container-fluid\\\">\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-raised btn-success btn-lg\\\" ng-click=\\\"createBoard()\\\">Create new board ...</button>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4 col-lg-3 board-item\\\" ng-repeat=\\\"board in boards\\\">\\n                        <div class=\\\"alert alert-dismissible alert-success\\\" >\\n                            <button type=\\\"button\\\" class=\\\"board-item__update\\\" ng-click=\\\"editBoard(board.id)\\\"><i class=\\\"material-icons\\\">create</i></button>\\n                            <button type=\\\"button\\\" class=\\\"confirm board-item__cart\\\" ng-click=\\\"deleteBoard(board.id)\\\"><i class=\\\"material-icons\\\">delete</i></button>\\n                            <div class=\\\"panel-heading board-item__title\\\">{{ board.name }} </div>\\n                            <a data-ng-href=\\\"#/boards/{{ board.id }}\\\"></a>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\");\n$templateCache.put(\"modules/boards/create-board-form.tpl.html\",\"<form name=\\\"boardForm\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h3 class=\\\"modal-title\\\">{{ formTitle }}</h3>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" data-ng-model=\\\"board.name\\\" ng-value=\\\"boardName\\\" required autofocus>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn btn-raised btn-success\\\" type=\\\"submit\\\" ng-click=\\\"boardSubmit()\\\">Save</button>\\n        <button class=\\\"btn btn-raised btn-warning\\\" type=\\\"button\\\" ng-click=\\\"cancel()\\\">Cancel</button>\\n    </div>\\n</form>\");\n$templateCache.put(\"modules/card-list/card-list.tpl.html\",\"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-raised btn-success btn-lg\\\" data-ng-click=\\\"createCardList()\\\">Create new card list ...</button>\\n    </div>\\n</div>\\n<div class=\\\"row sortable-container\\\" sv-root sv-part=\\\"allCardList\\\">\\n    <div class=\\\"col-md-3 card-list-item\\\"\\n         data-ng-repeat=\\\"cardList in allCardList\\\"\\n         data-card-list-id=\\\"{{ cardList.id }}\\\"\\n         sv-element>\\n\\n        <div class=\\\"panel panel-default\\\" style=\\\"box-shadow: 0 1px 6px {{ cardList.color == \\\"\\\" ? \\\"\\\" : cardList.color }}\\\">\\n            <div class=\\\"panel-heading\\\" style=\\\"background-color: {{ cardList.color == \\\"\\\" ? \\\"\\\" : cardList.color }}\\\">\\n                {{ cardList.name }}\\n                <i sv-handle class=\\\"material-icons move\\\">games</i>\\n                <button type=\\\"button\\\"\\n                        class=\\\"card-list-item__update\\\"\\n                        data-ng-click=\\\"editCardList(cardList.id)\\\"><i class=\\\"material-icons\\\">create</i></button>\\n                <button type=\\\"button\\\"\\n                        class=\\\"confirm card-list-item__delete\\\"\\n                        data-ng-click=\\\"deleteCardList(cardList.id)\\\"><i class=\\\"material-icons\\\">delete</i></button>\\n\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n\\n\\n\\n            </div>\\n\\n            <!--<div class=\\\"panel-footer\\\"-->\\n                 <!--data-ng-controller=\\\"cardCtrl as cardCtrl\\\"-->\\n                 <!--data-ng-click=\\\"cardCtrl.createCard(cardList.id)\\\">-->\\n                <!--Add new card...-->\\n            <!--</div>-->\\n        </div>\\n\\n    </div>\\n</div>\");\n$templateCache.put(\"modules/boards/board-item/board-item.tpl.html\",\"<div class=\\\"container-fluid cardList fadein fadeout\\\"\\n     data-ng-hide=\\\"fakeIntro\\\"\\n     data-ng-controller=\\\"cardListCtrl as cardListCtrl\\\"\\n     ng-cloak>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10 col-md-offset-1\\\">\\n\\n            <div class=\\\"page-header\\\">\\n                <h1>{{ pageName }}</h1>\\n            </div>\\n\\n            <card-list></card-list>\\n        </div>\\n    </div>\\n</div>\\n\");}]);\n'use strict';\n\n/* @ngInject */\nBoardsFactory.$inject = [\"$http\"];\nangular\n    .module('app')\n    .factory('BoardsFactory', BoardsFactory );\n\nfunction BoardsFactory($http) {\n\n    var board = this;\n    this.boardList = {};\n\n    board.getBoards = getBoards;\n    board.createBoard = createBoard;\n    board.editBoard = editBoard;\n    board.updateBoard = updateBoard;\n    board.deleteBoard = deleteBoard;\n\n    return board;\n\n    function getBoards() {\n        return $http.get('/api/boards')\n            .then(function(rec) {\n                board.boardList = rec.data;\n                return rec.data;\n            });\n    }\n\n    function createBoard(board) {\n        return $http.post('/api/boards', board);\n    }\n\n    function editBoard(id) {\n        return $http.get('/api/boards/' + id + '/edit')\n            .then(function(rec) {\n                return rec.data;\n            });\n    }\n\n    function updateBoard(id, board) {\n        return $http.put('/api/boards/' + id, board);\n    }\n\n    function deleteBoard(id) {\n        return $http.delete('/api/boards/' + id)\n    }\n}\n'use strict';\n\n/* @ngInject */\nBoardsController.$inject = [\"$scope\", \"BoardsFactory\", \"$uibModal\", \"cfpLoadingBar\", \"$templateCache\"];\nangular\n    .module('app')\n    .controller('BoardsController', BoardsController);\n\nfunction BoardsController($scope, BoardsFactory, $uibModal, cfpLoadingBar, $templateCache) {\n\n    $scope.allBoards = allBoards;\n    $scope.createBoard = createBoard;\n    $scope.editBoard = editBoard;\n    $scope.deleteBoard = deleteBoard;\n\n    activate();\n\n    function activate() {\n        allBoards();\n\n        $scope.loadStart = function() {\n            cfpLoadingBar.start();\n        };\n\n        $scope.loadComplete = function () {\n            cfpLoadingBar.complete();\n        };\n\n        $scope.loadStart();\n        $scope.fakeIntro = true;\n    }\n\n    function allBoards() {\n        BoardsFactory.getBoards()\n            .then(function(rec) {\n                $scope.boards = BoardsFactory.boardList;\n                $scope.loadComplete();\n                $scope.fakeIntro = false;\n            });\n    }\n\n    function createBoard() {\n        var modalInstance = $uibModal.open({\n            template: $templateCache.get(\"modules/boards/create-board-form.tpl.html\"),\n            controller: [\"$scope\", \"$uibModalInstance\", function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Create board';\n                $scope.boardSubmit = function() {\n                    if($scope.boardForm.$valid) {\n                        BoardsFactory.createBoard($scope.board)\n                            .then(function() {\n                                $uibModalInstance.close();\n                            });\n                    }\n                };\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }]\n        });\n\n        modalInstance.result.then(function() {\n            $scope.allBoards();\n        });\n    }\n\n    function editBoard(id) {\n        var modalInstance = $uibModal.open({\n            template: $templateCache.get(\"modules/boards/create-board-form.tpl.html\"),\n            controller: [\"$scope\", \"$uibModalInstance\", function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Edit board';\n                BoardsFactory.editBoard(id)\n                    .then(function(rec) {\n\n                        $scope.boardName = rec.name;\n                        $scope.boardSubmit = function() {\n                            if($scope.boardForm.$valid) {\n                                BoardsFactory.updateBoard(id, $scope.board)\n                                    .then(function() {\n                                        $uibModalInstance.close();\n                                    });\n                            }\n                        };\n\n                    });\n\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }]\n        });\n\n        modalInstance.result.then(function() {\n            $scope.allBoards();\n        });\n    }\n\n    function deleteBoard(id) {\n        $.confirm({\n            title: 'Are you sure?',\n            content: 'The board to move to a basket!',\n            confirm: function(){\n                BoardsFactory.deleteBoard(id)\n                    .then(function(rec) {\n                        new PNotify({\n                            title: 'Info',\n                            text: 'Board successfully removed',\n                            type: 'info',\n                            delay: 3000\n                        });\n                        $scope.allBoards();\n                    });\n            }\n        });\n    }\n}\n'use strict';\n\n/* @ngInject */\nangular\n    .module('app')\n    .component('cardList', {\n        templateUrl: '/js/modules/card-list/card-list.tpl.html',\n        controller: cardListCtrl\n    });\n\n'use strict';\n\n/* @ngInject */\ncardListCtrl.$inject = [\"$scope\", \"$uibModal\", \"$stateParams\", \"cardListFactory\", \"cfpLoadingBar\"];\nangular\n    .module('app')\n    .controller('cardListCtrl', cardListCtrl);\n\nfunction cardListCtrl($scope, $uibModal, $stateParams, cardListFactory, cfpLoadingBar) {\n\n    $scope.cardList = cardList;\n    $scope.createCardList = createCardList;\n    $scope.editCardList = editCardList;\n    $scope.deleteCardList = deleteCardList;\n\n    activate();\n\n    function activate() {\n        $scope.cardList();\n\n        $scope.loadStart = function() {\n            cfpLoadingBar.start();\n        };\n\n        $scope.loadComplete = function () {\n            cfpLoadingBar.complete();\n        };\n\n        $scope.loadStart();\n        $scope.fakeIntro = true;\n    }\n\n    $scope.$watchCollection('allCardList', function(newArr, oldArr) {\n        cardListFactory.watchAllCardList(newArr);\n    });\n\n    function cardList() {\n        cardListFactory.getAllCardList()\n            .then(function(rec) {\n                $scope.allCardList = rec;\n                $scope.loadComplete();\n                $scope.fakeIntro = false;\n            });\n    }\n\n    function createCardList() {\n        var modalInstance = $uibModal.open({\n            templateUrl: '/api/card-list-create-form',\n            controller: [\"$scope\", \"$uibModalInstance\", function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Create card listqqqqqq';\n                $scope.cardListSubmit = function() {\n                    if($scope.cardListForm.$valid) {\n                        $scope.cardListFields.board_id = $stateParams.id;\n                        cardListFactory.createCardList($scope.cardListFields)\n                            .then(function() {\n                                $uibModalInstance.close();\n                            });\n                    }\n                };\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }]\n        });\n\n        modalInstance.result.then(function() {\n            $scope.cardList();\n        });\n    }\n\n    function editCardList(id) {\n        var modalInstance = $uibModal.open({\n            templateUrl: '/api/card-list-create-form',\n            controller: [\"$scope\", \"$uibModalInstance\", function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Edit card list';\n                cardListFactory.editCardList(id)\n                    .then(function(rec) {\n                        $scope.cardListFields = { name: '', color: '' };\n                        $scope.cardListName = rec.name;\n                        $scope.colorcardListColor = rec.color;\n                        $scope.cardListSubmit = function() {\n                            if($scope.cardListFields.name != rec.name || $scope.cardListFields.color) {\n                                $scope.cardListFields.board_id = $stateParams.id;\n                                $scope.cardListFields.name = !$scope.cardListFields.name ? rec.name : $scope.cardListFields.name;\n                                $scope.cardListFields.color = !$scope.cardListFields.color ? rec.color : $scope.cardListFields.color;\n                                cardListFactory.updateCardList(id, $scope.cardListFields)\n                                    .then(function() {\n                                        modalInstance.close();\n                                    });\n                            } else {\n                                $uibModalInstance.dismiss('cancel');\n                            }\n                        };\n\n                    });\n\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }]\n        });\n\n        modalInstance.result.then(function() {\n            $scope.cardList();\n        });\n    }\n\n    function deleteCardList(id) {\n        $.confirm({\n            title: 'Are you sure?',\n            confirm: function(){\n                cardListFactory.deleteCardList(id)\n                    .then(function(rec) {\n                        new PNotify({\n                            title: 'Info',\n                            text: 'List of cards successfully removed',\n                            type: 'info',\n                            delay: 3000\n                        });\n                        $scope.cardList();\n                    });\n            }\n        });\n    }\n\n\n}\n'use strict';\n\n/* @ngInject */\ncardListFactory.$inject = [\"$http\", \"$stateParams\"];\nangular\n    .module('app')\n    .factory('cardListFactory', cardListFactory);\n\nfunction cardListFactory($http, $stateParams) {\n    var cardList = {};\n\n    cardList.getAllCardList = getAllCardList;\n    cardList.watchAllCardList = watchAllCardList;\n    cardList.createCardList = createCardList;\n    cardList.editCardList = editCardList;\n    cardList.updateCardList = updateCardList;\n    cardList.deleteCardList = deleteCardList;\n\n    return cardList;\n\n    function getAllCardList() {\n        return $http.get('/api/card-list', {\n                params: {\n                    board_id: $stateParams.id\n                }\n            })\n            .then(function (rec) {\n                return rec.data;\n            });\n    }\n\n    function watchAllCardList(newArr) {\n        return $http.post('/api/card-list-sorting', newArr)\n            .then(function(rec) {\n                return rec.data;\n            });\n    }\n\n    function createCardList(cardList) {\n        return $http.post('/api/card-list', cardList);\n    }\n\n    function editCardList(id) {\n        return $http.get('/api/card-list/' + id + '/edit')\n            .then(function(rec) {\n                return rec.data;\n            });\n    }\n\n    function updateCardList(id, cardList) {\n        return $http.put('/api/card-list/' + id, cardList)\n    }\n\n    function deleteCardList(id) {\n        return $http.delete('/api/card-list/' + id)\n    }\n}\n/* @ngInject */\n\nangular.module('app').controller('cardCtrl', [\"$scope\", \"cardFactory\", \"$uibModal\", \"cfpLoadingBar\", function($scope, cardFactory, $uibModal, cfpLoadingBar) {\n\n    $self = this;\n\n    $scope.init = function() {\n        $scope.getCards();\n    };\n\n    var cardListId = $('.card-list-item').data('card-list-id');\n\n    $scope.getCards = function() {\n\n        cardFactory.getCards()\n            .then(function(rec) {\n                console.log(rec)\n            });\n    };\n\n    $self.createCard = function(cardListId) {\n        var modalInstance = $uibModal.open({\n            templateUrl: '/api/card-create-form',\n            controller: [\"$scope\", \"$uibModalInstance\", function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Create card';\n                $scope.cardCreateSubmit = function() {\n                    if($scope.cardCreateForm.$valid) {\n                        $scope.cardFields.cardListId = cardListId;\n                        cardFactory.createCard($scope.cardFields)\n                            .then(function() {\n                                $uibModalInstance.close();\n                            });\n                    }\n                };\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }]\n        });\n\n        modalInstance.result.then(function() {\n            $scope.allBoards();\n        });\n    };\n\n    $scope.init();\n}]);\n/* @ngInject */\n\nangular.module('app').factory('cardFactory', [\"$http\", function($http) {\n\n    var card = {};\n\n    card.getCards = function(cardListId) {\n        return $http.get('/api/card', {\n                params: {\n                    cardListId: cardListId\n                }\n            })\n            .then(function(rec) {\n                return rec.data;\n            });\n    };\n\n    card.createCard = function(card) {\n        return $http.post('/api/card', card);\n    };\n\n    return card;\n}]);\n'use strict';\n\n/* @ngInject */\nBoardItemCtrl.$inject = [\"$scope\", \"$stateParams\", \"BoardItemFactory\"];\nangular\n    .module('app')\n    .controller('BoardItemCtrl', BoardItemCtrl);\n\nfunction BoardItemCtrl($scope, $stateParams, BoardItemFactory) {\n    BoardItemFactory.getBoardInfo($stateParams.id)\n        .then(function(rec) {\n            $scope.pageName = rec.name;\n        });\n}\n\n'use strict';\n\n/* @ngInject */\nBoardItemFactory.$inject = [\"$http\"];\nangular\n    .module('app')\n    .factory('BoardItemFactory', BoardItemFactory);\n\nfunction BoardItemFactory($http) {\n\n    var board = this;\n    board.getBoardInfo = getBoardInfo;\n\n    function getBoardInfo(id) {\n        return $http.get('/api/boards/' + id)\n            .then(function(rec) {\n                return rec.data;\n            });\n    }\n\n    return board;\n}"],"sourceRoot":"/source/"}