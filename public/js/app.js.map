{"version":3,"sources":["annotated.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["/* @ngInject */\n\nangular.module('app', ['ngRoute', 'ui.bootstrap', 'colorpicker.module', 'chieffancypants.loadingBar', 'ngAnimate', 'angular-sortable-view'])\n    .config([\"cfpLoadingBarProvider\", function(cfpLoadingBarProvider) {\n        cfpLoadingBarProvider.includeSpinner = true;\n    }]);\n/**\n *  Initialize the material design\n */\n$.material.init();\nangular.module('app').config([\"$routeProvider\", function($routeProvider) {\n\n    $routeProvider\n\n        .when('/boards', {\n            templateUrl: '/api/boards-main',\n            controller: 'boardsCtrl'\n        })\n\n        .when('/boards/:id', {\n            templateUrl: '/api/boards-item',\n            controller: 'boardItemCtrl'\n        });\n\n}]);\n\n/* @ngInject */\n\nangular.module('app').controller('boardItemCtrl', [\"$scope\", \"$routeParams\", \"boardItemFactory\", function($scope, $routeParams, boardItemFactory) {\n\n    boardItemFactory.getBoardInfo($routeParams.id)\n        .then(function(rec) {\n            $scope.pageName = rec.name;\n        });\n}]);\n\n/* @ngInject */\n\nangular.module('app').controller('boardsCtrl', [\"$scope\", \"boardsFactory\", \"$uibModal\", \"cfpLoadingBar\", function($scope, boardsFactory, $uibModal, cfpLoadingBar) {\n\n    $scope.init = function() {\n        $scope.allBoards();\n\n        $scope.loadStart = function() {\n            cfpLoadingBar.start();\n        };\n\n        $scope.loadComplete = function () {\n            cfpLoadingBar.complete();\n        };\n\n        $scope.loadStart();\n        $scope.fakeIntro = true;\n    };\n\n    $scope.allBoards = function() {\n        boardsFactory.getBoards()\n            .then(function(rec) {\n                $scope.boards = boardsFactory.boardList;\n                $scope.loadComplete();\n                $scope.fakeIntro = false;\n            });\n    };\n\n    $scope.createBoard = function() {\n        var modalInstance = $uibModal.open({\n            templateUrl: '/api/boards-create-form',\n            controller: [\"$scope\", \"$uibModalInstance\", function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Create board';\n                $scope.boardSubmit = function() {\n                    if($scope.boardForm.$valid) {\n                        boardsFactory.createBoard($scope.board)\n                            .then(function() {\n                                $uibModalInstance.close();\n                            });\n                    }\n                };\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }]\n        });\n\n        modalInstance.result.then(function() {\n            $scope.allBoards();\n        });\n    };\n\n    $scope.editBoard = function(id) {\n        var modalInstance = $uibModal.open({\n            templateUrl: '/api/boards-create-form',\n            controller: [\"$scope\", \"$uibModalInstance\", function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Edit board';\n                boardsFactory.editBoard(id)\n                    .then(function(rec) {\n\n                        $scope.boardName = rec.name;\n                        $scope.boardSubmit = function() {\n                            if($scope.boardForm.$valid) {\n                                boardsFactory.updateBoard(id, $scope.board)\n                                    .then(function() {\n                                        $uibModalInstance.close();\n                                    });\n                            }\n                        };\n\n                    });\n\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }]\n        });\n\n        modalInstance.result.then(function() {\n            $scope.allBoards();\n        });\n    };\n\n    $scope.deleteBoard = function(id) {\n        $.confirm({\n            title: 'Are you sure?',\n            content: 'The board to move to a basket!',\n            confirm: function(){\n                boardsFactory.deleteBoard(id)\n                    .then(function(rec) {\n                        new PNotify({\n                            title: 'Info',\n                            text: 'Board successfully removed',\n                            type: 'info',\n                            delay: 3000\n                        });\n                        $scope.allBoards();\n                    });\n            }\n        });\n    };\n\n    $scope.init();\n}]);\n/* @ngInject */\n\nangular.module('app').controller('cardCtrl', [\"$scope\", \"cardFactory\", \"$uibModal\", \"cfpLoadingBar\", function($scope, cardFactory, $uibModal, cfpLoadingBar) {\n\n    $self = this;\n\n    $scope.init = function() {\n        $scope.getCards();\n    };\n\n    var cardListId = $('.card-list-item').data('card-list-id');\n    console.log(cardListId);\n\n    $scope.getCards = function() {\n\n        cardFactory.getCards()\n            .then(function(rec) {\n                console.log(rec)\n            });\n    };\n\n    $self.createCard = function(cardListId) {\n        var modalInstance = $uibModal.open({\n            templateUrl: '/api/card-create-form',\n            controller: [\"$scope\", \"$uibModalInstance\", function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Create card';\n                $scope.cardCreateSubmit = function() {\n                    if($scope.cardCreateForm.$valid) {\n                        $scope.cardFields.cardListId = cardListId;\n                        cardFactory.createCard($scope.cardFields)\n                            .then(function() {\n                                $uibModalInstance.close();\n                            });\n                    }\n                };\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }]\n        });\n\n        modalInstance.result.then(function() {\n            $scope.allBoards();\n        });\n    };\n\n    $scope.init();\n}]);\n/* @ngInject */\n\nangular.module('app').controller('cardListCtrl', [\"$scope\", \"$uibModal\", \"$routeParams\", \"cardListFactory\", \"cfpLoadingBar\", function($scope, $uibModal, $routeParams, cardListFactory, cfpLoadingBar) {\n\n    var $self = this;\n    $scope.init = function() {\n        $scope.cardList();\n\n        $scope.loadStart = function() {\n            cfpLoadingBar.start();\n        };\n\n        $scope.loadComplete = function () {\n            cfpLoadingBar.complete();\n        };\n\n        $scope.loadStart();\n        $scope.fakeIntro = true;\n    };\n\n    $scope.printArray = function(arr){\n        return '[' + arr.toString().replace(/([^,]+)/g, '\"$1\"').replace(/,/g, ', ') + ']';\n    };\n\n    $scope.cardList = function() {\n        cardListFactory.getAllCardList()\n            .then(function(rec) {\n                $self.allCardList = rec;\n                $scope.allCardList = rec;\n                $scope.loadComplete();\n                $scope.fakeIntro = false;\n            });\n    };\n\n    $scope.$watchCollection('allCardList', function(newArr, oldArr) {\n        cardListFactory.watchAllCardList(newArr)\n            .then(function() {\n\n            });\n    });\n\n    $self.createCardList = function() {\n        var modalInstance = $uibModal.open({\n            templateUrl: '/api/card-list-create-form',\n            controller: [\"$scope\", \"$uibModalInstance\", function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Create card list';\n                $scope.cardListSubmit = function() {\n                    if($scope.cardListForm.$valid) {\n                        $scope.cardListFields.board_id = $routeParams.id;\n                        cardListFactory.createCardList($scope.cardListFields)\n                            .then(function() {\n                                $uibModalInstance.close();\n                            });\n                    }\n                };\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }]\n        });\n\n        modalInstance.result.then(function() {\n            $scope.cardList();\n        });\n    };\n\n    $self.editCardList = function(id) {\n        var modalInstance = $uibModal.open({\n            templateUrl: '/api/card-list-create-form',\n            controller: [\"$scope\", \"$uibModalInstance\", function($scope, $uibModalInstance) {\n                $scope.formTitle = 'Edit card list';\n                cardListFactory.editCardList(id)\n                    .then(function(rec) {\n                        $scope.cardListFields = { name: '', color: '' };\n                        $scope.cardListName = rec.name;\n                        $scope.colorcardListColor = rec.color;\n                        $scope.cardListSubmit = function() {\n                            if($scope.cardListFields.name != rec.name || $scope.cardListFields.color) {\n                                $scope.cardListFields.board_id = $routeParams.id;\n                                $scope.cardListFields.name = !$scope.cardListFields.name ? rec.name : $scope.cardListFields.name;\n                                $scope.cardListFields.color = !$scope.cardListFields.color ? rec.color : $scope.cardListFields.color;\n                                cardListFactory.updateCardList(id, $scope.cardListFields)\n                                    .then(function() {\n                                        modalInstance.close();\n                                    });\n                            } else {\n                                $uibModalInstance.dismiss('cancel');\n                            }\n                        };\n\n                    });\n\n                $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }]\n        });\n\n        modalInstance.result.then(function() {\n            $scope.cardList();\n        });\n    };\n\n    $self.deleteCardList = function(id) {\n        $.confirm({\n            title: 'Are you sure?',\n            confirm: function(){\n                cardListFactory.deleteCardList(id)\n                    .then(function(rec) {\n                        new PNotify({\n                            title: 'Info',\n                            text: 'List of cards successfully removed',\n                            type: 'info',\n                            delay: 3000\n                        });\n                        $scope.cardList();\n                    });\n            }\n        });\n    };\n\n    $scope.init();\n}]);\n/* @ngInject */\n\nangular.module('app').factory('boardItemFactory', [\"$http\", function($http) {\n\n    var board = this;\n\n    board.getBoardInfo = function(id) {\n        return $http.get('/api/boards/' + id)\n            .then(function(rec) {\n                return rec.data;\n            });\n    };\n\n    return board;\n}]);\n/* @ngInject */\n\nangular.module('app').factory('boardsFactory', [\"$http\", function($http) {\n\n    var board = this;\n    this.boardList = {};\n\n    board.getBoards = function() {\n        return $http.get('/api/boards')\n            .then(function(rec) {\n                board.boardList = rec.data;\n                return rec.data;\n            });\n    };\n\n    board.createBoard = function(board) {\n        return $http.post('/api/boards', board);\n    };\n\n    board.editBoard = function(id) {\n        return $http.get('/api/boards/' + id + '/edit')\n            .then(function(rec) {\n                return rec.data;\n            });\n    };\n\n    board.updateBoard = function(id, board) {\n        return $http.put('/api/boards/' + id, board);\n    };\n\n    board.deleteBoard = function(id) {\n        return $http.delete('/api/boards/' + id)\n    };\n\n    return board;\n}]);\n/* @ngInject */\n\nangular.module('app').factory('cardFactory', [\"$http\", function($http) {\n\n    var card = {};\n\n    card.getCards = function(cardListId) {\n        return $http.get('/api/card', {\n                params: {\n                    cardListId: cardListId\n                }\n            })\n            .then(function(rec) {\n                return rec.data;\n            });\n    };\n\n    card.createCard = function(card) {\n        return $http.post('/api/card', card);\n    };\n\n    return card;\n}]);\n/* @ngInject */\n\nangular.module('app').factory('cardListFactory', [\"$http\", \"$routeParams\", function($http, $routeParams) {\n    var cardList = {};\n\n    cardList.getAllCardList = function() {\n        return $http.get('/api/card-list', {\n                params: {\n                    board_id: $routeParams.id\n                }\n            })\n            .then(function (rec) {\n                return rec.data;\n            });\n    };\n\n    cardList.watchAllCardList = function(newArr) {\n        return $http.post('/api/card-list-sorting', newArr)\n            .then(function(rec) {\n                return rec.data;\n            });\n    };\n\n    cardList.createCardList = function(cardList) {\n        return $http.post('/api/card-list', cardList);\n    };\n\n    cardList.editCardList = function(id) {\n        return $http.get('/api/card-list/' + id + '/edit')\n            .then(function(rec) {\n                return rec.data;\n            });\n    };\n\n    cardList.updateCardList = function(id, cardList) {\n        return $http.put('/api/card-list/' + id, cardList)\n    };\n\n    cardList.deleteCardList = function(id) {\n        return $http.delete('/api/card-list/' + id)\n    };\n\n    return cardList;\n}]);"],"sourceRoot":"/source/"}